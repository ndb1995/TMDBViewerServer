@page "/searchbyname"

@using TMDBViewerServer.Data
@using TMDbLib.Client
@using TMDbLib.Objects.Movies
@using TMDbLib.Objects.General;
@using TMDbLib.Objects.Search;

@inject MovieService service
<div class="container">
    <div class=col>
        <div class="row bg-light">
            <div class="col">
                <div class="input-group">
                    <input type="text" id="movieName" class="form-control" placeholder="Enter movie name" @bind="@movieName" />
                    <span class="input-group-btn">
                        <button class="btn btn-info" @onclick="updateMovieName"> Update Movie</button>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=col>
    @foreach (SearchMovie result in searchResultList)
    {
        <div class="card mb-3">
            <div class="row no-gutters">
                <div class="col-md-4">
                    <img src=@getFullPosterPath(result) class="img-fluid img-thumbnail" alt=@result.PosterPath>
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">@result.Title</h5>
                        <p class="card-text">@result.Overview</p>
                        <p class="card-text"><small class="text-muted">Release Date: @result.ReleaseDate</small></p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    @@media (min-width:768px) {
        .card-deck > .card {
            width: 10%;
            flex-wrap: wrap;
            flex: initial;
        }
    }

</style>


@code {
    SearchContainer<SearchMovie> results = new SearchContainer<SearchMovie>();
    List<SearchMovie> searchResultList = new List<SearchMovie>();
    string movieName;

    //update screen based off of imdb ID
    private async Task updateMovieName()
    {
        searchResultList.Clear();
        results = await service.getMovieByName(movieName);
        foreach (SearchMovie result in results.Results)
        {
            searchResultList.Add(result);
        }
        searchResultList.Sort(new PopularityCompare());
    }

    private class PopularityCompare : IComparer<SearchMovie>
    {
        public int Compare(SearchMovie x, SearchMovie y)
        {
            return y.Popularity.CompareTo(x.Popularity);
        }
    }

    private string getFullPosterPath(SearchMovie result)
    {
        return ("https://www.themoviedb.org/t/p/original" + @result.PosterPath);
    }
}
